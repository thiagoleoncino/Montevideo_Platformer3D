//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/02 - Character/Inputs/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""NormalActions"",
            ""id"": ""9ecfab03-487e-40fd-814e-28c6c979391a"",
            ""actions"": [
                {
                    ""name"": ""LeftStick"",
                    ""type"": ""Value"",
                    ""id"": ""69d4dcdf-ad5c-492f-9885-9acc82e0076c"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Button 1"",
                    ""type"": ""Button"",
                    ""id"": ""88146cbf-74bd-4345-86bf-c68b7f52089c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button 2"",
                    ""type"": ""Button"",
                    ""id"": ""386ef910-5bfe-463f-933b-a7e6a9de6996"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button 3"",
                    ""type"": ""Button"",
                    ""id"": ""aea00d9a-8924-4de6-8261-3d0c57635ec9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button 4"",
                    ""type"": ""Button"",
                    ""id"": ""44a27982-2663-4787-bc38-6a27e44a29da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L1"",
                    ""type"": ""Button"",
                    ""id"": ""42b03d68-8014-4d28-b66d-8fb8d87d97cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R1"",
                    ""type"": ""Button"",
                    ""id"": ""43b86ef4-96c2-42c6-9bee-a983c5983e1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""540dfd14-ac04-4eeb-a9b2-1bddc4524747"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""900b0f0a-4a6e-4cb4-941b-ff199c13a051"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfd9de03-33ab-4ae9-84a2-5067856b6364"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b371ec5-a8a4-40bf-8e59-757e23697f13"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c4d65ce-dd22-4cb0-a0cc-a545e31cf7dd"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66cdecc7-9094-4ef7-81e7-4ac211f78721"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""979f8db3-5207-4b27-ab41-a6295ecb385b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // NormalActions
        m_NormalActions = asset.FindActionMap("NormalActions", throwIfNotFound: true);
        m_NormalActions_LeftStick = m_NormalActions.FindAction("LeftStick", throwIfNotFound: true);
        m_NormalActions_Button1 = m_NormalActions.FindAction("Button 1", throwIfNotFound: true);
        m_NormalActions_Button2 = m_NormalActions.FindAction("Button 2", throwIfNotFound: true);
        m_NormalActions_Button3 = m_NormalActions.FindAction("Button 3", throwIfNotFound: true);
        m_NormalActions_Button4 = m_NormalActions.FindAction("Button 4", throwIfNotFound: true);
        m_NormalActions_L1 = m_NormalActions.FindAction("L1", throwIfNotFound: true);
        m_NormalActions_R1 = m_NormalActions.FindAction("R1", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // NormalActions
    private readonly InputActionMap m_NormalActions;
    private List<INormalActionsActions> m_NormalActionsActionsCallbackInterfaces = new List<INormalActionsActions>();
    private readonly InputAction m_NormalActions_LeftStick;
    private readonly InputAction m_NormalActions_Button1;
    private readonly InputAction m_NormalActions_Button2;
    private readonly InputAction m_NormalActions_Button3;
    private readonly InputAction m_NormalActions_Button4;
    private readonly InputAction m_NormalActions_L1;
    private readonly InputAction m_NormalActions_R1;
    public struct NormalActionsActions
    {
        private @InputSystem m_Wrapper;
        public NormalActionsActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftStick => m_Wrapper.m_NormalActions_LeftStick;
        public InputAction @Button1 => m_Wrapper.m_NormalActions_Button1;
        public InputAction @Button2 => m_Wrapper.m_NormalActions_Button2;
        public InputAction @Button3 => m_Wrapper.m_NormalActions_Button3;
        public InputAction @Button4 => m_Wrapper.m_NormalActions_Button4;
        public InputAction @L1 => m_Wrapper.m_NormalActions_L1;
        public InputAction @R1 => m_Wrapper.m_NormalActions_R1;
        public InputActionMap Get() { return m_Wrapper.m_NormalActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NormalActionsActions set) { return set.Get(); }
        public void AddCallbacks(INormalActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_NormalActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_NormalActionsActionsCallbackInterfaces.Add(instance);
            @LeftStick.started += instance.OnLeftStick;
            @LeftStick.performed += instance.OnLeftStick;
            @LeftStick.canceled += instance.OnLeftStick;
            @Button1.started += instance.OnButton1;
            @Button1.performed += instance.OnButton1;
            @Button1.canceled += instance.OnButton1;
            @Button2.started += instance.OnButton2;
            @Button2.performed += instance.OnButton2;
            @Button2.canceled += instance.OnButton2;
            @Button3.started += instance.OnButton3;
            @Button3.performed += instance.OnButton3;
            @Button3.canceled += instance.OnButton3;
            @Button4.started += instance.OnButton4;
            @Button4.performed += instance.OnButton4;
            @Button4.canceled += instance.OnButton4;
            @L1.started += instance.OnL1;
            @L1.performed += instance.OnL1;
            @L1.canceled += instance.OnL1;
            @R1.started += instance.OnR1;
            @R1.performed += instance.OnR1;
            @R1.canceled += instance.OnR1;
        }

        private void UnregisterCallbacks(INormalActionsActions instance)
        {
            @LeftStick.started -= instance.OnLeftStick;
            @LeftStick.performed -= instance.OnLeftStick;
            @LeftStick.canceled -= instance.OnLeftStick;
            @Button1.started -= instance.OnButton1;
            @Button1.performed -= instance.OnButton1;
            @Button1.canceled -= instance.OnButton1;
            @Button2.started -= instance.OnButton2;
            @Button2.performed -= instance.OnButton2;
            @Button2.canceled -= instance.OnButton2;
            @Button3.started -= instance.OnButton3;
            @Button3.performed -= instance.OnButton3;
            @Button3.canceled -= instance.OnButton3;
            @Button4.started -= instance.OnButton4;
            @Button4.performed -= instance.OnButton4;
            @Button4.canceled -= instance.OnButton4;
            @L1.started -= instance.OnL1;
            @L1.performed -= instance.OnL1;
            @L1.canceled -= instance.OnL1;
            @R1.started -= instance.OnR1;
            @R1.performed -= instance.OnR1;
            @R1.canceled -= instance.OnR1;
        }

        public void RemoveCallbacks(INormalActionsActions instance)
        {
            if (m_Wrapper.m_NormalActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(INormalActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_NormalActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_NormalActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public NormalActionsActions @NormalActions => new NormalActionsActions(this);
    public interface INormalActionsActions
    {
        void OnLeftStick(InputAction.CallbackContext context);
        void OnButton1(InputAction.CallbackContext context);
        void OnButton2(InputAction.CallbackContext context);
        void OnButton3(InputAction.CallbackContext context);
        void OnButton4(InputAction.CallbackContext context);
        void OnL1(InputAction.CallbackContext context);
        void OnR1(InputAction.CallbackContext context);
    }
}
